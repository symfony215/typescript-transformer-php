export type Typed = {
    string : string;
    nullbable : string | null;
    default : string;
    int : number;
    boolean : boolean;
    float : number;
    object : object;
    array : Array<any>;
    none : any;
    documented_string : string;
    mixed : number | string;
    documented_array : Array<number>;
    mixed_with_array : number | string | Array<number | string>;
    array_with_null : Array<number | null> | null;
    enum : {%Spatie\TypescriptTransformer\Tests\FakeClasses\Integration\Enum%};
    non_typescripted_type : {%Spatie\TypescriptTransformer\Tests\FakeClasses\Enum\RegularEnum%};
    other_dto : {%Spatie\TypescriptTransformer\Tests\FakeClasses\Integration\OtherDto%};
    other_dto_array : Array<{%Spatie\TypescriptTransformer\Tests\FakeClasses\Integration\OtherDto%}>;
    other_dto_collection : {%Spatie\TypescriptTransformer\Tests\FakeClasses\Integration\OtherDtoCollection%};
    dto_with_children : {%Spatie\TypescriptTransformer\Tests\FakeClasses\Integration\DtoWithChildren%};
    another_namespace_dto : {%Spatie\TypescriptTransformer\Tests\FakeClasses\Integration\LevelUp\YetAnotherDto%};
}
